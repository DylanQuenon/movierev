{% block stylesheets %}
	{{encore_entry_link_tags('sliderNewsStyle')}}
{% endblock %}

<div class="flex flex-col gap-10 py-24">
	{#Titre au dessus du slider#}
	<h2 class="text-center display-2xl object uppercase">Restez au courant des
		<span class="color-tertiary">dernières
			<br>
			<span id="typewriter"></span>
		</span>
	</h2>
	{#Slider des news#}
	<div class="relative">
		<div class="swiper relative">
			<!-- Swiper Wrapper -->
			<div class="swiper-wrapper">
				{% for news in lastNews %}
					<!-- Swiper Slide -->
					<div class="swiper-slide">
						{% include "partials/_card_news.html.twig" with {'actu': news} %}
					</div>

				{% endfor %}

			</div>
		</div>
		<div class="swiper-pagination">
			<span class="material-symbols-outlined swiper-button-prev">
				chevron_left
			</span>

			<span class="material-symbols-outlined swiper-button-next">
				chevron_right
			</span>

		</div>

	</div>
	{#Bouton pour voir toutes les news#}
	<div class="flex justify-center w-full">
		{% include "partials/_button.html.twig" with {'text':"Voir toutes les actualités", 'href': path("news_index")} %}
	</div>


</div>

{% block javascripts %}
    {{encore_entry_script_tags('sliderNews')}}
	<script>
		document.addEventListener('DOMContentLoaded', function () { // Sélectionner la vidéo
			const video = document.querySelector('video');

			// Créer un observateur d'intersection
			const observer = new IntersectionObserver((entries) => {
				entries.forEach(entry => { // Si la section est visible au centre de l'écran
					if (entry.isIntersecting) {
						video.play(); // Lancer la vidéo
					} else {
						video.pause(); // Mettre en pause la vidéo
					}
				});
				},
				{
				root: null, // utiliser le viewport comme racine
				rootMargin: '0px',
				threshold: [0.7] // Déclencher lorsque 50% de la section est visible
			});
			// Observer la section contenant la vidéo
			observer.observe(document.querySelector('video'));
		});

		const text = "actualités";
		const speed = 150; // Vitesse de la frappe
		const eraseSpeed = 100; // Vitesse de l'effacement
		const delayBeforeErase = 2000; // Délai avant l'effacement
		let index = 0;
		let isErasing = false;

		function typeWriter() {
			const element = document.getElementById('typewriter');

			// Ajouter la classe cursor
			if (! element.classList.contains('cursor')) {
				element.classList.add('cursor');
			}

			if (! isErasing) { // Afficher le texte progressivement
				element.innerHTML = text.substring(0, index + 1);
				index++;
				// Si tout le texte est affiché, passer en mode effacement
				if (index === text.length) {
					setTimeout(() => {
						isErasing = true;
					}, delayBeforeErase);
				}
			} else { // Effacer le texte progressivement
				element.innerHTML = text.substring(0, index - 1);
				index--;

				// Si tout le texte est effacé, recommencer l'écriture
				if (index === 0) {
				isErasing = false;
				}
			}

			// Reprogrammer l'appel de la fonction avec la bonne vitesse selon l'état
			const timeout = isErasing ? eraseSpeed : speed;
			setTimeout(typeWriter, timeout);
		}
		// Lancer l'animation
		typeWriter();
	</script>
{% endblock %}