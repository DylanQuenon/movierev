{% block stylesheets %}{{encore_entry_link_tags('cardMediaStyle')}}{% endblock %}

<div class="media_card flex flex-col items-center"> 
    {#Cover de l'image#}
    <div class="photos">
        {% if media.cover %}
            <img src="/uploads/{{ media.cover }}" alt="Poster du film {{ media.title }}" class="">
        {% else %}
            <img src="/images/default.jpg" alt="Pas de poster disponible" class="">
        {% endif %}
    
    </div>
    {#Infos#}
    <div class="media_card_infos">
        <div class="media_card_infos_content">
            {#Ajouter dans une liste data tippy#}
            {# Vérifie si l'utilisateur est connecté #}
        {% set user = app.user %}
        {# Vérifie si le média est dans le tableau $allMedia #}
        {% set mediaInCollection = media.id in allMedia|map(media => media.id) %}
        {% if app.user %}
            <button data-tippy-content="Enregistrer dans une liste" 
                class="saving_list w-full flex justify-end {{ user ? (mediaInCollection ? 'bg-tertiary' : 'bg-secondary') : 'bg-secondary' }}" 
                data-media-id="{{ media.id }}">
                <span class="material-symbols-outlined {{ user ? (mediaInCollection ? 'color-secondary' : 'color-tertiary') : 'color-tertiary' }}">
                    bookmark
                </span>
            </button>
        
        {% endif %}

            {#text de la carte#}
            <div class="media_card_infos_heading">
                <div class="card_infos_heading_main">
                    <h5 class="text-xl object uppercase">{{ media.title }}</h5>
                    <p class="text-md urbanist color-tertiary font-semibold">{{ media.releaseDate|date('Y') }}</p>
                </div>
            </div>

            <p class="text-lg urbanist">{{ media.synopsis|slice(0, 80) ~ '...' }}</p>
        </div>
        {#actions de la carte#}
        <div class="media_card_actions flex justify-end pb-2 w-full">
            {% include 'partials/_trailer_button.html.twig' with {'trailerUrl': media.trailer} %}
            {% include "partials/_button.html.twig" with {'text': 'Voir plus', 'href': path('medias_show', {'slug': media.slug})} %}
        </div>
    </div>
</div>
  <!-- Overlay pour les listes de collections -->
  {% if app.user %}
<div id="collectionOverlay" class="fixed inset-0 z-50 hidden bg-gray-800 bg-opacity-50">
    <div class="flex items-center justify-center h-full">
        <div class="bg-white p-5 rounded shadow-lg">
            <h3 class="text-lg font-semibold mb-4">Choisissez une collection</h3>
            <ul id="collectionList">
                
                {% for collection in app.user.collections %}
                    <li class="flex justify-between text-md urbanist items-center w-full p-2 border-b">
                        <span class="w-1/2">{{ collection.name }}</span>
                        <button class="add-media-btn rounded-full h-[30px] w-[30px] flex justify-center items-center bg-tertiary text-lg color-secondary font-semibold urbanist" data-collection-id="{{ collection.id }}" data-media-id="{{ media.id }}">
                            +
                        </button>
                    </li>
                {% endfor %}
            </ul>
            <button id="closeOverlay" class="mt-4 p-2 bg-gray-300 rounded text-lg urbanist">Fermer</button>
        </div>
    </div>
</div>
  
  {% endif %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const savingListButtons = document.querySelectorAll('.saving_list');
    const overlay = document.getElementById('collectionOverlay');
    const closeOverlayButton = document.getElementById('closeOverlay') || null;
    let currentMediaId = null;

    // Ouvrir l'overlay lors du clic sur le bouton
    savingListButtons.forEach(button => {
        button.addEventListener('click', function() {
            currentMediaId = button.getAttribute('data-media-id'); // Récupérer l'ID du média
            console.log("Média ID: " + currentMediaId); // Pour déboguer
            overlay.classList.remove('hidden');
        });
    });

    // Fermer l'overlay
    if (closeOverlayButton){
    closeOverlayButton.addEventListener('click', function() {
        overlay.classList.add('hidden');
        currentMediaId = null; // Réinitialiser l'ID du média
    });

    }

    // Ajouter le média à la collection via un formulaire
    const addMediaButtons = document.querySelectorAll('.add-media-btn');
    addMediaButtons.forEach(button => {
        button.addEventListener('click', function() {
            const collectionId = button.getAttribute('data-collection-id');
            
            if (!currentMediaId) {
                alert('Aucun média sélectionné.');
                return;
            }

            // Créer un formulaire pour envoyer les données
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/collections/add/${collectionId}/${currentMediaId}`;
            document.body.appendChild(form); // Ajouter le formulaire au body
            form.submit(); // Soumettre le formulaire
        });
    });
});
</script>
