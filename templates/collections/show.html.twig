{% extends 'base.html.twig' %}

{% block title %}Collection {{ collection.name }}{% endblock %}


{% block body %}
    <div class="slide">
        <div class="wrapper py-24">
            <h1 class="text-3xl font-bold mb-6">Collection: {{ collection.name }}</h1>
            
            {% if app.user and app.user.id == user.id %}
                {# L'utilisateur peut modifier la liste #}
                <div id="sortable-list" class=" cursor-grabbing grid grid-cols-1 gap-5">
                    {% for collectionsMedia in collectionsMedia %}
                        <div class="flex items-center bg-white p-4 rounded-lg shadow-md border border-gray-200"
                             data-media-id="{{ collectionsMedia.medias.id }}">
                            <span class="material-symbols-outlined mr-4 cursor-move">
                                drag_indicator
                            </span>
                            <div class="flex items-center gap-5 w-full">
                                <img src="/uploads/{{ collectionsMedia.medias.poster }}" alt="{{ collectionsMedia.medias.title }}" class="w-16 h-24 object-cover rounded">
                                <div class="flex flex-col">
                                    <h2 class="text-lg font-semibold">{{ collectionsMedia.medias.title }}</h2>
                                    <p class="text-gray-500">{{ collectionsMedia.medias.releaseDate|date('Y-m-d') }}</p>
                                    <p class="text-gray-700 truncate max-w-xs">{{ collectionsMedia.medias.synopsis|slice(0, 80) ~ (collectionsMedia.medias.synopsis|length > 80 ? '...' : '') }}</p>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% else %}
                {# L'utilisateur ne peut pas modifier la liste #}
                <div class="grid grid-cols-1 gap-5">
                    {% for collectionsMedia in collectionsMedia %}
                        <div class="flex items-center bg-white p-4 rounded-lg shadow-md border border-gray-200">
                            <div class="flex items-center gap-5 w-full">
                                <img src="/uploads/{{ collectionsMedia.medias.poster }}" alt="{{ collectionsMedia.medias.title }}" class="w-16 h-24 object-cover rounded">
                                <div class="flex flex-col">
                                    <h2 class="text-lg font-semibold">{{ collectionsMedia.medias.title }}</h2>
                                    <p class="text-gray-500">{{ collectionsMedia.medias.releaseDate|date('Y-m-d') }}</p>
                                    <p class="text-gray-700 truncate max-w-xs">{{ collectionsMedia.medias.synopsis|slice(0, 80) ~ (collectionsMedia.medias.synopsis|length > 80 ? '...' : '') }}</p>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const el = document.getElementById('sortable-list');

        if(el){
            const sortable = new Sortable(el, {
                animation: 150,
                onEnd: function (evt) {
                    const items = el.children;
                    const order = Array.from(items).map(item => item.getAttribute('data-media-id'));

                    // Appel AJAX pour sauvegarder la nouvelle position
                    saveNewOrder(order);
                }
            });

        }
   

            
    });

    function saveNewOrder(order) {
        fetch('/collections/{{ collection.id }}/update-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': '{{ csrf_token("your_intention") }}', // Inclure le token CSRF si nÃ©cessaire
            },
            body: JSON.stringify({ order: order })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            console.log('Order saved:', data);
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
</script>
{% endblock %}
