{% extends 'base.html.twig' %}

{% block title %}{{review.title}}
{% endblock %}

{% block stylesheets %}
	{{encore_entry_link_tags('reviewIndiv')}}
{% endblock %}

{% block body %}
	<div class="slide bg-secondary" style="background: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url('/uploads/{{review.media.cover}}'); background-size: cover; background-position: center;" id="reviewIndiv">
		<div class="wrapper max-sm:w-[90%]">
            {#Bouton retour#}
			<a href="javascript:window.history.back()" class=" transition-all hover:bg-purple-500 hover:text-white py-2 px-4 rounded-full bg-white w-fit mb-10 text-lg urbanist font-semibold color-tertiary flex gap-2">
				<span class="material-symbols-outlined">
					chevron_left
				</span>
				Retour
			</a>
            {#contenu carte gauche et coms à droite#}
			<div class="flex flex-wrap gap-5">
				<div class="reviewIndiv_card h-fit max-md:w-full lg:w-[62%] p-5 flex  items-center gap-10">
					<div class="reviewIndiv_card_content flex flex-col gap-5 w-full">
                        {#review card#}
						<div class="reviewIndiv_card_content_heading flex flex-col gap-5">
                            {#heading#}
							<div class="reviewIndiv_card_content_heading_info2 relative flex flex-wrap justify-between">
								<a href="{{path('medias_show', {"slug":review.media.slug})}}" class="flex gap-1 items-center text-md  text-font-semibold  urbanist color-tertiary font-semibold transition hover:text-black">
									<span class="underline">{{review.media.title}}</span>
									<span class="material-symbols-outlined">chevron_right</span>
								</a>
								{#Copier le lien#}
								<button id="copyLink" class="w-fit text-md items-center bg-tertiary rounded-md color-secondary urbanist font-semibold py-2 px-4 flex gap-2">
									<span class="material-symbols-outlined -rotate-45">
										link</span>
									<span class="textCopyLink">Copier le lien</span>
								</button>

                             
							</div>
                            {#author de la review#}
							<div class="reviewIndiv_card_content_heading_author flex justify-between">
								<div class="reviewIndiv_card_content_heading_author_info flex items-center gap-3">
                                {% if review.author.avatar %}
									<img src="/uploads/{{review.author.avatar}}" alt="Image de l'utilisateur {{review.author.username}}" class="w-[50px] h-[50px] object-cover rounded-full">
                                {% else %}
                                    <img src="/images/nopp.png" class="w-[50px] h-[50px] rounded-full object-cover overflow-hidden" alt="Image de l'utilisateur {{review.author.username}}">
                                
                                {% endif %}
									<a href="{{path('user_show', {'slug': review.author.slug})}}" class="flex flex-col transition-all hover:text-purple-500">
										<p class="text-lg urbanist font-semibold">{{review.author.fullName}}</p>
										<p class="text-md urbanist">@{{review.author.username}}</p>
									</a>
								</div>
                                {#Date et note de la review#}
								<div class="reviewIndiv_card_content_heading_author_rating flex flex-col items-center gap-2">
									{% include "partials/rating.html.twig" with {'rating':review.rating} %}
									{% set diff = (date()|date('U') - review.createdAt|date('U')) %}
									{% if diff < 60 %}
										<p class="date text-md text-gray-500">Il y a
											{{ diff }}
											secondes</p>
									{% elseif diff < 3600 %}
										<p class="date text-md text-gray-500">Il y a
											{{ (diff / 60)|round }}
											minutes</p>
									{% elseif diff < 86400 %}
										<p class="date text-md text-gray-500">Il y a
											{{ (diff / 3600)|round }}
											heures</p>
									{% elseif diff < 604800 %}
										<p class="date text-md text-gray-500">Il y a
											{{ (diff / 86400)|round }}
											jours</p>
									{% elseif diff < 2592000 %}
										<p class="date text-md text-gray-500">Il y a
											{{ (diff / 604800)|round }}
											semaines</p>
									{% elseif diff < 31536000 %}
										<p class="date text-md text-gray-500">Il y a
											{{ (diff / 2592000)|round }}
											mois</p>
									{% else %}
										<p class="date text-md text-gray-500">Le
											{{ review.createdAt|date('d/m/Y') }}</p>
									{% endif %}
								</div>

							</div>
						</div>
                        {#la review#}
						<div class="reviewIndiv_card_content_body flex flex-col gap-1 w-full">
                        <h4 class="text-lg urbanist color-tertiary font-semibold">{{review.title}}</h4>
							<p class="text-lg urbanist">
								{{review.content|raw|nl2br}}
							</p>
						</div>
						<hr class="border-purple-500 border-1 rounded-full my-2">
                        <div class="flex justify-between items-center">
                        {#Likes et commentaires#}
						<div class="reviewIndiv_stats flex gap-5">
							<div class="flex gap-2 text-xl urbanist color-tertiary">
                                <i data-tippy-content="Liker/Disliker cette review" class="fa-heart heart-icon cursor-pointer {{ app.user ? (review.isLikedByUser(app.user) ? 'fa-solid' : 'fa-regular') : 'fa-regular' }}" data-review-id="{{ review.id }}"></i>
                                <span data-tippy-content="Voir qui a liké " class="likes-count cursor pointer">{{ review.likes|length }}</span>
						    </div>
                            <div class="flex gap-2 text-xl urbanist color-tertiary">
                                <span class="material-symbols-outlined">
                                    chat
                                </span>
                                {{review.comments|length}}
                            </div>
                               {% if app.user and ( app.user != review.author)%}
                                <div class="report transition-all flex gap-2 items-center text-lg font">
                                    <button data-id="{{ review.id }}" data-type="review" data-tippy-content="Signaler la review" class="bg-tertiary color-secondary w-[30px] h-[30px] rounded-full flex justify-center items-center text-md urbanist hover:underline-offset-4" onclick="openReportModal('reportModal-review-{{ review.id }}')">
                                        <i class="fa-regular fa-flag"></i>
                                    </button>
                                </div>
                            
                            {% endif %}
                            
					    </div>
                        <div class="flex gap-5 items-center">
                          {% if app.user and (app.user == review.author or is_granted('ROLE_ADMIN')) %}
                                 <a href="{{path('reviews_edit',{'slug':review.slug})}}" class='items-center text-lg urbanist py-2 px-4 bg-tertiary rounded-md flex color-secondary gap-2 w-fit h-fit group-hover:[bg-purple-50, text-purple-500]'>Modifier la review <i class="fa-solid fa-pen"></i></a>
                          {% endif %}

                        {% if app.user and (app.user == review.author or is_granted('ROLE_ADMIN')) or is_granted('ROLE_MODERATEUR') %}
                            <button onclick="openDeleteModal('deleteModalReview', 'deleteForm', '{{ path('review_delete', { 'slug': review.slug }) }}', 'Supprimer', 'Annuler')" class="bg-red-500 text-white w-[40px] h-[40px] justify-center rounded hover:bg-red-600 text-lg urbanist items-center  flex"><i data-tippy-content="Supprimer la review" class="fa-solid fa-trash"></i></button>
                        
                        {% endif %}
                          
                        </div>
                        
                        </div>
				</div>
			</div>
            {#commentaires#}
			<div class="relative max-m:w-full lg:w-4/12 h-[600px] bg-white overflow-y-scroll flex over flex-col gap-2 p-5 rounded-[20px]" id="sectionComments">
				<h3 class="display-md object uppercase">Commentaires ({{review.comments|length}})</h3>
                {% if review.comments|length <= 0 %}
                    <div class="flex items-center justify-center h-full w-full">
                        <p class="text-lg urbanist">Pas encore de commentaire <span class="color-tertiary font-semibold">Soyez le premier</span></p>
                    </div>

                {% else %}
                    {% for comment in review.comments %}
                        {% if comment.parent is null %}
                            <div class="w-full h-full">
                                <div class="py-5 border-b border-tertiary-light">
                                {% include "partials/_comment.html.twig" with {'comment':comment} %}
                                    <div class="w-full mt-2">
                                        <div class="w-full">
                                            <div class="reply-form-container hidden" id="reply-form-{{ comment.id }}">
                                            {% if app.user %}
                                                <form action="{{ path('comment_reply', {'id': comment.id}) }}" method="post">
                                                    {{ form_start(replyForms[comment.id]) }}
                                                    <div class="flex items-center gap-2">
                                                        {% if app.user.avatar %}
                                                            <img src="/uploads/{{app.user.avatar}}" alt="Image de l'utilisateur {{app.user.username}}" class="border-2 border-purple-500 w-[30px] h-[30px] object-cover rounded-full">
                                                        {% else %}
                                                            <img src="/images/nopp.png" alt="Image de l'utilisateur {{app.user.username}}" class="border-2 border-purple-500 w-[30px] h-[30px] object-cover rounded-full">
                                                        
                                                        {% endif %}
                                                        {{ form_widget(replyForms[comment.id].content) }}
                                                        {{ form_errors(replyForms[comment.id].content) }}
                                                        <input type="hidden" name="parent_id" value="{{ comment.id }}">
                                                        <button class="group w-[50px] h-[50px] bg-highlight rounded-md">
                                                            <i class="fa-solid fa-location-arrow text-background rotate-45 group-hover:rotate-0 transition duration-300 mr-1"></i>
                                                        </button>
                                                    </div>
                                                    {{ form_end(replyForms[comment.id]) }}
                                                </form>
                                                {% else %}
                                                <p class="flex gap-2 text-lg urbanist font-semibold ">Vous devez être connecté pour répondre <a href="{{path('account_login')}}"class="color-tertiary"> Connectez-vous</a></p>
                                            
                                            {% endif %}
                                            
                                            
                                            
                                            </div>
                                        </div>
                                
                                    </div>
                                </div>
                            </div>
                        {% endif %}
                    {% endfor %}
                
                {% endif %}
        
                <div class="form_comments flex gap-5">
                        {% if app.user %}
                        {% if app.user.avatar %}
                            <img src="/uploads/{{app.user.avatar}}" alt="Image de l'utilisateur {{app.user.username}}" class="border-2 border-purple-500 w-[40px] h-[40px] object-cover rounded-full">
                        {% else %}
                            <img src="/images/nopp.png" alt="Image de l'utilisateur {{app.user.username}}" class="border-2 border-purple-500 w-[40px] h-[40px] object-cover rounded-full">
                        
                        {% endif %}
                        <div class="w-full flex gap-5">
                           {{form_start(myForm) }}
                                {{ form_widget(myForm.content) }}
                                {{ form_errors(myForm.content) }}
                                <button class="group text-lg color-secondary items-center urbanist p-2 bg-tertiary flex gap-2 bg-highlight rounded-md">
                                    <i class="fa-solid fa-location-arrow text-background rotate-45 group-hover:rotate-0 transition duration-300 mr-1"></i>
                                </button>
                            {{ form_end(myForm) }}
                            {% else %}
                                <div>                        
                                    <p class="flex gap-1  text-md urbanist font-semibold ">Vous devez être connecté pour commenter <a href="{{path('account_login')}}"class="underline color-tertiary"> Connectez-vous</a></p>
                                </div>
                            {% endif %}
                        </div>
                </div>
			</div>
		</div>
        </div>
    <!-- Modal pour afficher les utilisateurs qui ont aimé -->
	</div>
    <div id="likesModal" class="fixed inset-0 z-50 flex items-center justify-center hidden bg-black bg-opacity-50">
        <div class="bg-white rounded-lg shadow-lg w-96 p-5">
            <div class="flex justify-between items-center">
                <h2 class="text-lg font-bold">Utilisateurs qui ont aimé</h2>
                <button onclick="document.getElementById('likesModal').classList.add('hidden')" class="text-gray-500 hover:text-gray-700">
                    &times;
                </button>
            </div>
            <ul class="mt-4">
                {% for like in likedByUsers %}
                    <li class="flex items-center mb-2">
                        {% if like.author.avatar %}
                            <img src="/uploads/{{ like.author.avatar }}" alt="Image de l'utilisateur {{ like.author.username }}" class="w-8 h-8 rounded-full object-cover mr-2">
                        {% else %}
                            <img src="/images/nopp.png" alt="Image de l'utilisateur {{ like.author.username }}" class="w-8 h-8 rounded-full object-cover mr-2">
                        
                        {% endif %}
                        <a href="{{path('user_show', {'slug':like.author.slug})}}" class="text-blue-600 hover:underline">{{ like.author.username }}</a>
                    </li>
                {% endfor %}
            </ul>
        </div>
    </div>
   	{% include '/partials/_delete_modal.html.twig' with {
         modal_id: 'deleteModalReview',
         form_id: 'deleteForm',
         title: 'Confirmation de suppression',
         message: 'Êtes-vous sûr de vouloir supprimer cette review ? Cette action est irréversible.',
         action_url: '#',  
         confirm_text: 'Supprimer',
         cancel_text: 'Annuler'
      } %}

    {% include "partials/_sliderReviews.html.twig" %}

   {% include 'partials/_modal.html.twig' with { 'type': 'review', 'id': review.id, 'modal_id': 'reportModal-review-' ~ review.id } %}

{% endblock %}
{% block javascripts %}
<script>
    function openReportModal(modalId) {
        var modal = document.getElementById(modalId);

            modal.classList.remove('hidden');
        
    }
	const copyLinkButton = document.getElementById("copyLink")
        copyLinkButton.addEventListener('click', function (event) {
            event.preventDefault();
            navigator.clipboard.writeText(window.location.href).then(function () {
                copyLinkButton.innerHTML = '<span class="material-symbols-outlined -rotate-45">link</span><span class="textCopyLink">Lien copié</span>';
                setTimeout(function () {
                    copyLinkButton.innerHTML = '<span class="material-symbols-outlined -rotate-45">link</span><span class="textCopyLink">Copier le lien</span>';
                }, 3000);
            }, function (err) {
                console.error('Erreur lors de la copie du lien : ', err);
            });
    });

    document.querySelector('.likes-count').addEventListener('click', function() {
        document.getElementById('likesModal').classList.remove('hidden');
    });


    document.querySelectorAll('.heart-icon').forEach(icon => {
        icon.addEventListener('click', function() {
            const reviewId = this.dataset.reviewId; // Récupérer l'ID de la revue

            // Vérifier si l'utilisateur est connecté
            if (!{{ app.user ? 'true' : 'false' }}) {
                // Rediriger vers la page de connexion
                window.location.href = '{{ path('account_login') }}'; // Remplacez 'app_login' par le nom correct de votre route de connexion
                return; // Arrêter l'exécution ici
            }

            const isLiked = this.classList.contains('fa-solid'); // Vérifier si déjà liké

            // Basculer la classe liked / not-liked
            this.classList.toggle('fa-solid', !isLiked);
            this.classList.toggle('fa-regular', isLiked);

            fetch(`/reviews/${reviewId}/like`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                // Mettre à jour le nombre de likes affiché
                document.querySelector('.likes-count').textContent = data.likesCount;
            })
            .catch(error => console.error('Error:', error));
        });
    });
    document.querySelectorAll('.thumb-icon').forEach(icon => {
        icon.addEventListener('click', function() {
            const commentId = this.dataset.commentId; // Récupérer l'ID du commentaire

            // Vérifier si l'utilisateur est connecté
            if (!{{ app.user ? 'true' : 'false' }}) {
                // Rediriger vers la page de connexion
                window.location.href = '{{ path('account_login') }}'; // Remplacez 'app_login' par le nom correct de votre route de connexion
                return; // Arrêter l'exécution ici
            }

            const isLiked = this.classList.contains('fa-solid'); // Vérifier si déjà liké

            // Basculer la classe liked / not-liked
            this.classList.toggle('fa-solid', !isLiked);
            this.classList.toggle('fa-regular', isLiked);

            fetch(`/comments/${commentId}/like`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                // Mettre à jour le nombre de likes affiché
                document.querySelector(`.comments.likes-count[data-comment-id="${commentId}"]`).textContent = data.likesCount;
            })
            .catch(error => console.error('Error:', error));
        });
    });


    const replyButtons = document.querySelectorAll('.reply-button');

    replyButtons.forEach(button => {
        button.addEventListener('click', function() {
            const commentId = this.getAttribute('data-comment-id');
            const replyFormContainer = document.getElementById('reply-form-' + commentId);
            
            if (replyFormContainer.classList.contains('hidden')) {
                replyFormContainer.classList.remove('hidden');
            } else {
                replyFormContainer.classList.add('hidden');
            }
        });
    });

    document.querySelectorAll('.toggle-replies').forEach(function(button) {
        button.addEventListener('click', function() {
            var commentId = this.getAttribute('data-comment-id');
            var replies = document.getElementById('replies-' + commentId);
            var repliesCount = replies.querySelectorAll('.list-group-item').length;

            if (replies.classList.contains('hidden')) {
                replies.classList.remove('hidden');
                this.textContent = repliesCount === 1 ? 'Cacher la réponse' : 'Cacher les réponses';
            } else {
                replies.classList.add('hidden');
                this.textContent = repliesCount === 1 ? 'Voir la réponse' : 'Voir ' + repliesCount + ' réponses';
            }
        });
    });
    
</script>
{% endblock %}
